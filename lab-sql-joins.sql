-- 1.List the number of films per category.
SELECT c.name as category, COUNT(f.film_id) as number_of_film
FROM film_category f
JOIN category c
USING (category_id)
GROUP BY c.name;

-- 2.Retrieve the store ID, city, and country for each store.
SELECT s.store_id, ci.city, co.country
FROM store s
JOIN address a
USING (address_id)
JOIN city ci
USING (city_id)
JOIN country co
USING (country_id);

-- 3.Calculate the total revenue generated by each store in dollars.
SELECT SUM(p.amount) as total_revenue, sto.store_id
FROM payment p
JOIN staff sta
USING (staff_id)
JOIN store sto
USING (store_id)
GROUP BY sto.store_id;

-- 4.Determine the average running time of films for each category.
SELECT ROUND(AVG(f.length)) as average_running_time_in_min, c.name
FROM film f
JOIN film_category fc
USING (film_id)
JOIN category c
USING (category_id)
GROUP BY c.name;

-- 5.Identify the film categories with the longest average running time.
SELECT ROUND(AVG(f.length)) as average_running_time_in_min, c.name
FROM film f
JOIN film_category fc
USING (film_id)
JOIN category c
USING (category_id)
GROUP BY c.name
ORDER BY average_running_time_in_min desc
LIMIT 1;

-- 6.Display the top 10 most frequently rented movies in descending order.
SELECT COUNT(r.rental_id) AS rental_total, f.title
FROM rental r
JOIN inventory i
USING (inventory_id)
JOIN film f
USING (film_id)
GROUP BY f.title
ORDER BY rental_total DESC
LIMIT 10;

-- 7.Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT f.title, s.store_id
FROM store s
JOIN inventory i
USING (store_id)
JOIN film f
USING (film_id)
WHERE f.title = "Academy Dinosaur" AND s.store_id=1 ;

-- 8. Provide a list of all distinct film titles, along with their availability status in the inventory. 
-- Include a column indicating whether each title is 'Available' or 'NOT available.'
--  List of ALL film titles and if they are available in inventory
SELECT f.title,
CASE 
WHEN r.return_date IS NULL THEN 'NOT available'
ELSE 'Available'
END AS rental_status
FROM film f
JOIN inventory
USING (film_id)
JOIN rental r
USING (inventory_id);

